{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dines\\\\Desktop\\\\validation_hooks\\\\src\\\\App.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nconst phone = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst App = () => {\n  const formik = useFormik({\n    initialValues: {\n      FirstName: '',\n      SecondName: '',\n      PhoneNumber: '',\n      Password: '',\n      ConfirmPassword: ''\n    },\n    validationSchema: yup.object({\n      FirstName: yup.string().required().min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 character\"),\n      SecondName: yup.string().required().min(4, \"Minimum 4 characters required\").max(8, \"Maximum length is 8 characters\"),\n      PhoneNumber: yup.string().required().matches(phone, \"Phone number is invalid\")\n    }),\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, \"First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"FirstName\",\n    className: \"form-control\",\n    autoComplete: \"off\",\n    onChange: formik.handleChange,\n    value: formik.values.FirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, \"Second Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"SecondName\",\n    className: \"form-control\",\n    autoComplete: \"off\",\n    onChange: formik.handleChange,\n    value: formik.values.SecondName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, \"Phone Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"PhoneNumber\",\n    className: \"form-control\",\n    autoComplete: \"off\",\n    onChange: formik.handleChange,\n    value: formik.values.PhoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Password\",\n    className: \"form-control\",\n    autoComplete: \"off\",\n    onChange: formik.handleChange,\n    value: formik.values.Password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, \"Confirm Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ConfirmPassword\",\n    className: \"form-control\",\n    autoComplete: \"off\",\n    onChange: formik.handleChange,\n    value: formik.values.ConfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, \"Register\")))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/dines/Desktop/validation_hooks/src/App.js"],"names":["React","Button","useFormik","yup","phone","App","formik","initialValues","FirstName","SecondName","PhoneNumber","Password","ConfirmPassword","validationSchema","object","string","required","min","max","matches","onSubmit","values","console","log","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport {useFormik} from \"formik\";\nimport *as yup from \"yup\";\nconst phone = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\nconst App=()=> {\n  const formik=useFormik({\n    initialValues:{\n        FirstName:'',\n        SecondName:'',\n        PhoneNumber:'',\n        Password:'',\n        ConfirmPassword:''\n    },\n    validationSchema:yup.object({\n      FirstName:yup.string()\n      .required()\n      .min(4,\"Minimum 4 characters required\")\n      .max(8,\"Maximum length is 8 character\"),\n      SecondName:yup.string()\n      .required()\n      .min(4,\"Minimum 4 characters required\")\n      .max(8,\"Maximum length is 8 characters\"),\n      PhoneNumber:yup.string()\n      .required()\n      .matches(phone,\"Phone number is invalid\")\n    }),\n     onSubmit:(values) =>\n    {\n      console.log(values);\n    }\n})\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <div className=\"container mt-5\">\n   <div className=\"jumbotron\">\n     <div className=\"form-group\">\n   <label>First Name:</label>\n   <input\n   type=\"text\"\n   name=\"FirstName\"\n   className=\"form-control\"\n   autoComplete=\"off\"\n   onChange={formik.handleChange}\n   value={formik.values.FirstName}\n   />\n   </div>\n   <div className=\"form-group\">\n   <label>Second Name:</label>\n   <input\n   type=\"text\"\n   name=\"SecondName\"\n   className=\"form-control\"\n   autoComplete=\"off\"\n   onChange={formik.handleChange}\n   value={formik.values.SecondName}\n   />\n   </div>\n   <div className=\"form-group\">\n   <label>Phone Number:</label>\n   <input\n   type=\"text\"\n   name=\"PhoneNumber\"\n   className=\"form-control\"\n   autoComplete=\"off\"\n   onChange={formik.handleChange}\n   value={formik.values.PhoneNumber}\n   />\n   </div>\n   <div className=\"form-group\">\n   <label>Password:</label>\n   <input\n   type=\"text\"\n   name=\"Password\"\n   className=\"form-control\"\n   autoComplete=\"off\"\n   onChange={formik.handleChange}\n   value={formik.values.Password}\n   />\n   </div>\n   <div className=\"form-group\">\n   <label>Confirm Password:</label>\n   <input\n   type=\"text\"\n   name=\"ConfirmPassword\"\n   className=\"form-control\"\n   autoComplete=\"off\"\n   onChange={formik.handleChange}\n   value={formik.values.ConfirmPassword}\n   />\n   </div>\n   <div>\n     <Button type=\"submit\">Register</Button>\n     </div>\n   </div>\n   </div>\n   </form>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}